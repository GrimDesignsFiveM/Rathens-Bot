
errors:
    missingArgument: 'Missing argument, the `{0}` argument is required!'
    invalidProperty: 'Invalid `{0}` provided, you must provide a valid {1}.'
    noChannelsWithNameOrId: 'I found no channels with the name or ID of `{0}`'
    noUsersWithNameOrId: 'I found no users with the name or ID of `{0}`'
    mustBeConnectedToVoice: 'You must be connected to a voice channel to use this command!'
    mustBeConnectedToSameChannel: 'You must be connected to the same voice channel I am in to {0}!'
    missingMusicQueue: 'Missing music `query`, you must include a link to the song that you want to listen to, or at least give me a song title!'
    cantMentionEveryone: "You don't have permissions to mention everyone."
    requireLevelFeatureToBeEnabled: 'This command requires the `Levels & Experience` feature to be enabled for the server, you can ask a server admin if they want to enable it with `{0}`'
    errorOccurredWhileLoading: 'An error occurred while loading the {0}, please try again. If the problem continues, please report this to one of my developers on the [AvaIre support server](https://discord.gg/gt2FWER).'

levelupMessages:
    - "GG :user, you just reached **Level :level**"
    - "Eyy :user, you just leveled up! You're now **Level :level**"
    - "🌟 You just reached **Level :level** :user! Congrats 🌟"
    - "You're on 🔥 :user, you've just reached **Level :level**"
    - "Congratulations :user 🎉 You just leveled up! You're now **Level :level**"

levelupRoleMessages:
    - "GG :user, you just reached **Level :level**, you now have the **:role** role"
    - "Eyy :user, you just leveled up! You're now **Level :level**, have the **:role** role, you earned it."
    - "Congratulations :user 🎉 You just leveled up! You're now **Level :level**, you have also earned yourself the **:role** role"

pagination:
    simpleFooter: "Page **{0}** out of **{1}** pages.\n`{2} [page]`"

administration:
    common:
        invalidRole: ":user Invalid role, I couldn't find any role called **:role**"

    channelModule:
        invalidColorGiven: "Invalid color value given, the color must be a valid HEX value.\nYou can try this [random color picker](https://www.webpagefx.com/web-design/random-color-picker/) to try and get a random HEX color."
        message: "The `:type` module message has been set to:\n\n```:message```\n\nYou can test the message by using the command again and mentioning a user.\n`:command <user>`"

    AddLevelRoleCommand:
        noSlotsLeft: "The server doesn't have any more level role slots, you can remove existing level roles to free up slots."
        invalidLevel: "Invalid level requirement given, the level requirement must be a positive number."
        alreadyLevelRole: ":user The **:role** is already a level role, you can't use the same role twice."
        alreadyARoleAtLevel: "There is already a role assigned to level **:level**, only one role can be given per level."
        success: "The **:role** role has been added to the level-up role list.\nThe server has `:slots` more level role slots available."

    AddReactionRoleCommand:
        emoteDoestBelongToServer: "The emote does not belong to this server, you can only use emotes from this server as reaction emotes."
        messageHasNoSlots: "The message doesn't have any more reaction role slots available, you can remove existing reaction-roles to free up slots, or delete reaction role messages to add the role to a new reaction role message."
        serverHasNoSlots: "Can't create new reaction role messages, the server doesn't have any more reaction messages slots, you can deleting existing reaction role messages to free up slots, or add your reaction role to a reaction message if there are available slots on the message for more roles."
        success: "The :role role has been registered as an reaction role for the :emote emote.\nThe message has `:roleSlots` more reaction-role slots available for the message, and `:messageSlots` reaction-message slots available."

    AddSelfAssignableRoleCommand:
        noSlotsLeft: "The server doesn't have any more self-assignable role slots, you can remove existing self-assignable roles to free up slots."
        success: "The **:role** role has been added to the self-assignable list.\nThe server has `:slots` more self-assignable roles slots available."

    AdministrateExperienceCommand:
        cantUseForBots: "You can't add, remove, or reset XP for bot accounts since they don't earn any, please select a normal user when using this command."
        invalidAmountGiven: "The `amount` property must be between 1 and {0} to add or take XP from a user."
        aboutToResetEverything: "You're about to reset the XP for everyone on the entire server, note that this action **CAN NOT** be reversed. If you're sure you wanna continue, run the command to completely reset the servers XP.\n\n```:command server-reset :token```\nThis command will only work for 60 seconds, after that time the token becomes invalid and the command has to be ran again to get a new token."
        failedToSaveChanges: "Failed to save the changes to the database, please try again, if the error continues to happen, please contact support on the official [AvaIre support server](https://discord.gg/gt2FWER)."
        mustBeAnAdmin: "You must be a server admin to reset everyones XP."
        invalidSecurityToken: "Invalid security token given, please provide the correct security token to reset all the servers XP."
        warning: "Warning!"
        success:
            add: "**:amount** XP has been given to :target, they now have **:newAmount** XP."
            take: "**:amount** XP has been taken from :target, they now have **:newAmount** XP."
            reset: ":target has successfully had their XP reset."
            everything: "Everyone on the entire server has now had their XP completely reset!"

    AiCommand:
        message: "The `Artificial Intelligence` module has been **:status** for the :channel channel."
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    AliasCommand:
        noSlotsLeft: "The server doesn't have any more alias slots, you can delete existing aliases to free up slots."
        alreadyExists: "There is already a custom alias called `{0}`"
        invalidCommand: "Invalid command given, I don't know of any command called `{0}`"
        invalidAlias: "Invalid alias given, `{0}` is not registered as an alias."
        created: "The `:alias` alias has been linked to `:command`\nThe server has `:slots` more aliases slots available."
        deleted: "The `:alias` alias has been deleted successfully."

    AutoAssignRoleCommand:
        higherInTheHierarchy:
            user: ":user The **:role** role is positioned higher in the hierarchy than any role you have, you can't add roles with a higher ranking than you have."
            bot: ":user The **:role** role is positioned higher in the hierarchy, I can't give/remove this role from users."
        enabled: ":user **Auto assign role** on user join has been **enabled** and set to  **:role**"
        disabledNow: ":user **Auto assign role** on user join is now **disabled**."
        disabled: ":user **Auto assign role** on user join is currently **disabled**."
        status: ":user The **auto assign role** is currently set to **:role**"

    BanCommand:
        mustMentionUser: "You must mention the user that you want to ban."
        higherRole: "You can't ban people with a higher, or the same role as yourself."
        userHaveHigherRole: "I can't ban {0}, they have a higher role than me! If you want me to be able to ban the user, please readjust my role position to above {0} highest role."
        success: "**:target** was permanently banned by :user for \":reason\""
        failedToBan: "Failed to ban **:target** due to an error: :error"

    CategoriesCommand:
        title: "Command Category Status for #{0}"
        status: ":emoteEnabled Enabled   :emoteDisabledInChannel Disabled in Channel   :emoteDisabledGlobally Disabled Globally"

    ChangePrefixCommand:
        missingArgument: "Missing argument `category`, you must specify the command category that you want to change/reset the prefix for."
        invalidCategory: "Invalid `category` given, there are no command categories that are called, or start with `{0}`"
        invalidPrefix: "Invalid command prefix given, `{0}` is not a valid command prefix, all prefixes must **NOT** contain spaces and be between 1 and 16 characters long."
        update:
            global: "All commands in every command category now use the `:prefix` prefix."
            category: "All commands in the `:category` command category now use the `:prefix` prefix."
        reset:
            global: "All commands in every command category have been reset to use the `:prefix` prefix."
            category: "All commands in the `:category` command category have been reset to use the `:prefix` prefix."

    ChannelLevelCommand:
        invalidChannel: "Invalid channel given, the channel must be a valid text channel."
        cantTalkInChannel: "I can't talk in the {0} channel, so no users will be rewarded any XP for talking in the channel, if you want me to give users XP, please change my permission level for the channel so I can send messages in the channel."
        noChannelsWithRewardsDisabled: "There are currently no channels with the level rewards disabled, you can add one by using the `{0} <channel>` command."
        failedToUpdate: "Failed to save the changes to the database, please try again. If the issue persists, please contact one of my developers."
        listChannels: "All the channels mentioned below currently have their level rewards turned off, any channel not on this list is unaffected.\n\n:channels"
        listChannelsTitle: "Channels with their Level Rewards disabled ({0})"
        success: "The XP rewards for the :channel channel has been **:status**!"
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    GoodbyeCommand:
        note: "\nYou can customize the message by using `{0} [message]`"
        message: "The `Goodbye` module has been **:status** for the :channel channel."
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    GoodbyeMessageCommand:
        moduleMustBeEnabled: "The `goodbye` module must be enabled to use this command, you can enable the `goodbye` module by using the `{0}` command."
        message: "The embed option for goodbye messages has been **:status**\n:note"
        changedToDefault: "The `Goodbye` module message has been set back to the default."
        status:
            enabled: "enabled"
            disabled: "disabled"
        note:
            embed: "Goodbye messages will now be sent using embedded messages with the color: {0}"
            normal: "Now sending goodbye messages through normal messages."

    IAmCommand:
        notSelfAssignable: ":user Invalid role, **:role** is not a self-assignable role."
        roleIsHigherInTheHierarchy: ":user The role is higher in the role hierarchy, I can't give/remove the **:role** role from anyone."
        message: ":user You now have the **:role** role!"

    IAmNotCommand:
        notSelfAssignable: ":user Invalid role, **:role** is not a self-assignable role."
        roleIsHigherInTheHierarchy: ":user The role is higher in the role hierarchy, I can't give/remove the **:role** role from anyone."
        message: ":user You no longer have the **:role** role!"

    KickCommand:
        mustMentionUser: "You must mention the user that you want to kick."
        higherOrSameRole: "You can't kick people with a higher, or the same role as yourself."
        cantKickUser: "I can't kick {0}, they have a higher role than me, if you want be to be able to kick the user, please readjust my role position to above {0} highest role."
        success: "**:target** was kicked by :user for \":reason\""
        error: "Failed to kick **:target** due to an error: :error"

    LanguageCommand:
        invalidLanguageCode: "Invalid language code given, `{0}` is not a valid language code, or it is not yet supported!"
        changed: "The server's language has been successfully been updated to use the :name language!"
        note: "AvaIre supports several user-contributed languages that you can select with this command. Translations may not be 100% accurate or complete.\nTo select a language use `{0} <code>`"

    LevelAlertsCommand:
        message: "`Level up alerts` have been `:status` for the server.:note"
        note: "\nAll level up messages will be logged into the <#{0}> channel."
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    LevelCommand:
        message: "`Levels & Experience` have been `:status` for the server.:note"
        note: "\nLevel alerts are currently `{0}`, you can toggle them on or off with `{1}levelalerts`"
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    LevelHierarchyCommand:
        invalidTypeGiven: "Invalid type given, to toggle level hierarchy on or off, you must use either `on` or `off`."
        message: "Level up hierarchy has been `:status` for the server."
        statusMessage: "Level up hierarchy is currently `:status`, you can toggle it on or off with `:command`"
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    LevelModifierCommand:
        invalidNumberGiven: "Invalid modifier given, the modifier must be a positive percentage between `0.01%` and `500%`"
        resetToDefault: "The level modifier has been reset back to using the default **:modifier** modifier."
        changedTo: "The level and experience modifier has been change to **:modifier**"
        requiredIsNow: "\n\n**Required XP to reach some levels is now:**\n"
        statusMessage: "The server is currently using a **:modifier** modifier for levels and experience.\n\n**Required XP to reach some levels**\n"
        level: "Level {0}"

    ListAliasesCommand:
        noAliases: "The server doesn't have any aliases right now, you can create one by using the\n`{0}alias <alias> <command>` command"
        listAliases: "List of Aliases ({0})"

    ListLevelRolesCommand:
        noLevelRoles: "There are currently no level roles, an administrator can add roles to the level up table using the `:command` command"
        listRoles: "List of Level Roles ({0})"

    ListReactionRoleCommand:
        noReactionRoles: "The server doesn't have any reaction roles right now, you can create one by using\n`{0}arr <emote> <role>`"
        listReactionRoles: "List of Reaction Roles ({0})"

    ListSelfAssignableRolesCommand:
        noSelfAssignableRoles: "There are currently no self-assignable roles for this server."
        title: "There are {0} self-assignable roles"

    ModlogCommand:
        mustMentionTextChannel: "Invalid channel argument given, you must mention a valid text channel"
        cantSendEmbedMessages: "I can't send embedded messages in the specified channel, please change my permission level for the {0} channel if you want to use it as a modlog channel."
        enable: ":user **Server Modlogging** is now enabled and set to the :modlog channel."
        enabled: ":user **Server Modlogging** is currently enabled and set to the :modlog channel."
        disable: ":user **Server Modlogging** is now disabled for the server."
        disabled: ":user **Server Modlogging** is currently disabled."

    ModlogHistoryCommand:
        mustMentionUser: "You must mention a valid `user` that you want to display the modlog history for."
        noHistory: "No modlog history was found for this user."
        title: "{0}#{1} History ({2})"
        entry: "**{1}** | **#{0}** | **Moderator:** {2}\n**Date:** {3}\n**Reason:** {4}"
        noReasonGiven: "No reason was given."

    ModlogPardonCommand:
        modlogNotEnabled: "No modlog channel has been set, you must set a modlog channel to use this command."
        invalidCaseId: "Invalid case ID given, the ID must be greater than 0 and less than {0}"
        couldntFindCaseWithId: "Couldn't find a modlog case with an ID of {0} where you were the moderator, are you sure that you're the moderator for the given modlog case?"
        caseAlreadyPardoned: "The modlog case ID with an ID of `{0}` is already pardoned."
        notAPunishment: "The modlog case ID with an ID of `{0}` is not a punishment!"
        message: "The modlog case with an ID of **:case** has been been pardoned successfully."

    ModlogReasonCommand:
        modlogNotEnabled: "No modlog channel has been set, you must set a modlog channel to use this command."
        invalidCaseId: "Invalid case ID given, the ID must be greater than 0 and less than {0}"
        couldntFindCaseWithId: "Couldn't find a modlog case with an ID of {0} where you were the moderator, are you sure that you're the moderator for the given modlog case?"
        couldntFindModlogChannel: "Couldn't find the modlog channel, was it removed?"
        success: "The modlog case with an ID of **:id** was successfully edited and the reason was set to `:reason`"
        modlogCaseWasPardoned: "The modlog case with an ID of `{0}` has been pardoned, you can't edit pardoned modlog cases."
        failedToEdit: "Failed to edit modlog message: {0}"
        failedToFindMessage: "Couldn't find the message for the given modlog case, was it deleted?"

    NSFWCommand:
        invalidChannelOrStatus: "Invalid channel or status type given!"
        notValidChannel: "`{0}` is not a valid text channel!"
        notValidStatus: "`{0}` is not a valid status type, you must either pass `on` or `off`."
        message: "The :textChannel channel currently has NSFW **:status**!"
        updated: "The NSFW status for :textChannel has been changed to **:status**"
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    PurgeCommand:
        messagesDeletedIn: "{0} messages have been deleted in the {1} channel."
        messagesDeletedBy: "{0} messages sent by {1} have been deleted in the {2} channel."
        success: ":white_check_mark: `:number` messages have been deleted!"
        successBy: ":white_check_mark: `:number` messages have been deleted from :users"
        nothingToDelete: ":x: Nothing to delete, I am unable to delete messages older than 14 days."
        nothingToDeleteBy: ":x: Nothing to delete, I am unable to find any messages by :users in the last **:number** messages that were sent within the last 14 days."

    RemoveLevelRoleCommand:
        noRolesCalled: ":user There is no role called **:role** on the level-up table."
        noRolesLinked: ":user There are no roles linked to level **:role** on the level-up table."
        notALevelRole: ":user Invalid role, the `:name` role is not on the level-up table."
        message: "The **:role** role has been removed from the level-up role list.\nThe server now has `:slots` level role slots available."

    RemoveReactionRoleCommand:
        noReactionRoles: "The server doesn't have any reaction roles right now, you can create one by using\n`{0}arr <emote> <role>`"
        messageIdMustBeGreaterThanOne: "Invalid `message id` given, the `message id` must be at least 1 or greater."
        messageIdMustBeLowerThanRolesSize: "Invalid `message id` given, the `message id` cannot be higher than the amount of reaction roles the server currently has, which is `{0}` right now."
        failedToFetchMessage: "Something went wrong while trying to fetch the reaction role message with an ID of `{0}`, if this issue continues to happen, please report it to one of my developers."
        mustIncludeEmote: "You must include the emote that you want to remove from the reaction message."
        emoteDoestBelongToServer: "The emote does not belong to this server, you can only use emotes from this server as reaction emotes."
        roleNotFoundOnMessage: "The specified reaction message doesn't have a reaction role attached to it using the {0} emote."
        deletedMessage: "The reaction role message with an ID of **#:id** has successfully been deleted!"
        deletedEmote: "The :emote emote has been successfully removed from the reaction message.\nThe message has `:roleSlots` more reaction-role slots available for the message, and `:messageSlots` reaction-message slots available."

    RemoveSelfAssignableRoleCommand:
        message: "The **:role** role has been removed from the self-assignable list.\nThe server has `:slots` more self-assignable roles slots available."

    SlowmodeCommand:
        missingArgument: "Missing argument, you must either pass in the `seconds` value to enable slowmode for this or the mentioned channel, or `off` to disable it."
        mustBeValidNumbers: "Invalid slowmode value given, you must provide a number between **1** and **120**."
        message: "Slowmode has been **enabled** for the :textChannel channel.\nThe channel now allows **1** message every **:slowmode** seconds per-user."
        disabled: "Successfully **disabled** slowmode for the :textChannel channel."
        invalidTextChannel: "`{0}` is not a not a valid text channel, you must target a text channel to setup slowmode."
        failedToUpdate: "Failed to update the :textChannel channel, error: :message"

    ToggleCategoryCommand:
        invalidCategory: "Invalid category given, `{0}` is not a valid category"
        missingArgumentType: "Missing argument `channel/global`, you must include the channel or specify that the command should be run globally."
        invalidChannelOrGlobalString: "Invalid channel or global string given, you must either mention the channel that you want to affect, or write `global` to affect all the channels at the same time."
        cantEnabledCategory: "Whoops, you can't enable the **:category** command category while it is disabled globally.\nYou can use the command below to enable the category for all channels.\n`:command :category global on`"
        update:
            globally: "The `:category` command category has been `:status` for **all channels**."
            category: "The `:category` command category has been `:status` in :channel."
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    UnbanCommand:
        success: ':target has been successfully unbanned from the server because ":reason".'
        failedToUnban: "Failed to unban :target due to an error, message: :error"
        noUserIsBanned: "No user with an ID of `:id` is currently banned from the server."
        invalidUserIdGiven: "Invalid `user id` was given, the `user id` must be a numeric string of 18 or more numbers long."

    VoiceKickCommand:
        mustMentionUser: "You must mention the user that you want to kick."
        sameOrHigherRole: "You can't kick people with a higher, or same role as yourself."
        notConnected: "You can't voice kick people who are not connected to a voice channel."
        message: "**:target** was kicked from **:voiceChannel** by :user for \":reason\""

    VoteOptCommand:
        invalidArgument: "Invalid argument, you must either parse `in` or `out` to opt in or out of vote messages."
        message: "You have now opt-:type of getting vote messages."
        type:
            in: "in"
            out: "out"

    WarnCommand:
        requiresModlogIsEnabled: "This command requires a modlog channel to be set, a modlog channel can be set using the `{0}modlog` command."
        mustMentionUse: "You must mention a user that you want to warn."
        warnBots: "You can't warn bots!"
        failedToLogWarning: "Failed to log warning to the set modlog channel, does the modlog channel still exists, can I still send messages in the channel?"
        message: ":target has been **warned** for \":reason\""
        failedToSendDM: "Failed to DM the user with the warning, they most likely have their private settings set to disable all DMs from this server."

    WelcomeCommand:
        note: "\nYou can customize the message by using `{0} [message]`"
        message: "The `Welcome` module has been **:status** for the :channel channel.:note"
        status:
            enabled: "Enabled"
            disabled: "Disabled"

    WelcomeMessageCommand:
        moduleMustBeEnabled: "The `welcome` module must be enabled to use this command, you can enable the `welcome` module by using the `{0}welcome` command."
        message: "The embed option for welcome messages has been **:status**\n:note"
        changedToDefault: "The `Welcome` module message has been set back to the default."
        status:
            enabled: "enabled"
            disabled: "disabled"
        note:
            embed: "Welcome messages will now be sent using embedded messages with the color: {0}"
            normal: "Now sending welcome messages through normal messages."

fun:
    DiceCommand:
        missingDice: 'You must include the dice that you want to roll.'
        invalidDiceFormat: '`{0}` is not a valid dice format.'
        diceFormatMustBeGreaterThan: '`{0}` is not a valid dice format, the dice must be greater than 0 and less than 35'
        diceFormatMustBePositive: '`{0}` is not a valid dice format, the dice amount must be a valid positive number between 1 and 35'
        sidesFormatMustBeGreaterThan: '`{0}` is not a valid dice format, the sides must be greater than 0 and less than 128'
        sidesFormatMustBePositive: '`{0}` is not a valid dice format, the sides amount must be a valid positive number between 1 and 128'
        moreThanFiveRollsWasGiven: '\n_More than **5** dice rolls given, only the first five will be displayed_\n'
        resultedIn: '**{0}** resulted in **{1}**  ({2})'

    CoinflipCommand:
        heads: "You got Heads"
        tails: "You got Tails"

    EightBallCommand:
        mustIncludeQuestion: 'You must include a question for 8ball.'
        answers:
            - 'It is certain'
            - 'It is decidedly so'
            - 'Without a doubt'
            - 'Yes definitely'
            - 'You may rely on it'
            - 'As I see it, yes'
            - 'Most likely'
            - 'Outlook good'
            - 'Yes'
            - 'Signs point to yes'
            - 'Reply hazy, try again'
            - 'Ask again later'
            - 'Better not tell you now'
            - 'Cannot predict now'
            - 'Concentrate and ask again'
            - "Don't count on it"
            - 'My reply is no'
            - 'My sources say no'
            - 'Outlook not so good'
            - 'Very doubtful'

    MemeCommand:
        missingArgument: 'Missing `action` argument, you must include the meme type or user that you want to generate a meme for, or `list` to display all the memes types available.'
        invalidType: 'Invalid meme type given, `{0}` is not a valid meme type!'
        mustIncludeTopAndBottomText: 'You must include the `top text` and `bottom text` arguments to generate a meme.'
        listItem: '`{0}` => `{1}`'

    RandomCatCommand:
        tooManyAttempts: "Too many attempts was made to the cat API, try again in a minute, or ask a bot administrator to get an API key at [meow.senither.com](https://meow.senither.com/) to allow for more requests."
        notFound: "I couldn't find any cat pictures D: Try again, maybe they will show up now?"
        somethingWentWrong: "Something just went horribly wrong, please tell a bot administrator so they can look into this."

    ReverseCommand:
        palindrome: 'You reversed a palindrome, what were you expecting?'

    RipCommand:
        hasPaidTheirRespects: '**{0}** has paid their respects.'
        todayAndOverall: '{0} Today, {1} Overall'

    RollCommand:
        invalidValueGiven: 'Invalid `{0}` value given, `{1}` must be a number!'
        rolledNumber: ':user rolled **:number** out of :min - :max'

    SayCommand:
        userMissingPermissions: "You can't use the this command for the {0} channel, you must have the message write and message manage permissions for the channel to successfully run the command."
        botMissingPermissions: "The say command can't be used for the {0} channel, I need both the message write and message manage permissions for the channel to successfully run the command."
        success: "Your message has been sent to the :name channel."

    UndertaleTextBoxCommand:
        noArgumentsGiven: "Missing argument, you must either provide `list` to see a list of characters that you can choose from, or to generate an image, `character` or a valid image `url` to build the image for."
        failedToGenerateImage: "Failed to generate the the image, are you sure that you provided a correct image URL or character name?"
        title: "Undertale Character List"

help:
    HelpCommand:
        listOfCommands: ':page_with_curl: **List of Commands**'
        commandNote: '**Type `:help <command>` to see the help for that specified command.**\nExample: `:help :command`'
        categoriesNote: ':information_source: Type `:help <category>` to get a list of commands in that category.\nExample: `:help {0}` or `:help {1}`'
        categoriesTitle: ':scroll: Command Categories'
        invalidCategory: 'Invalid command category given, there are no categories called `:category`'
        invalidCommand: 'Invalid command given, there are no commands that have the trigger `:trigger`'
        tryingToViewSystemCommands: "You don't have permissions to run any of the commands in the `System` category. System commands can affect all of the servers that the bot is currently running on, and thus are limited to bot administrators/developers."
        singularHiddenCategories: '_There is **{0}** hidden category for this channel._'
        multipleHiddenCategories: '_There are **{0}** hidden categories for this channel._'
        fields:
            usage: 'Usage'
            example: 'Example'
            aliases: 'Aliases'
            seeAlso: 'See Also'
            footer: 'Command category: '

interaction:
    BiteCommand: '**{0}** bites **{1}**'
    BlushCommand: '**{0}** blushes at **{1}**'
    CuddleCommand: '**{0}** cuddles **{1}**'
    DivorceCommand: '**{0}** divorces **{1}**'
    EatCommand: '**{0}** eats some food with **{1}**'
    HelloCommand: '**{0}** says hello to **{1}**'
    HighFiveCommand: '**{0}** high fives **{1}**'
    HugCommand: '**{0}** hugs **{1}**'
    KillCommand: '**{0}** wants to kill **{1}**'
    KissCommand: '**{0}** kisses **{1}**'
    MarryCommand: '**{0}** wants to marry **{1}**'
    MeowCommand: '**{0}** meows at **{1}**'
    PanCommand: '**{0}** just hit **{1}** with a pan!'
    PatCommand: '**{0}** pats **{1}**'
    PokeCommand: '**{0}** pokes **{1}**'
    PoutCommand: '**{0}** pouts at **{1}**'
    PunchCommand: '**{0}** punches **{1}**'
    SenpaiCommand: '**{0}** wants to be noticed by **{1}**'
    ShrugCommand: '**{0}** shrugs at **{1}**'
    SlapCommand: '**{0}** slaps **{1}**'
    TickleCommand: '**{0}** tickles **{1}**'
    TriggeredCommand: '**{0}** is triggered by **{1}**'

music:
    internal:
        songWasSkipped: '[:title](:url) requested by :author was skipped.'
        nowPlayingSong: 'Now playing: [:title](:link)\n`:duration` at `:volume%` volume - Requested by :requester'
        nowPlayingPlaylist: 'The **:playlistName** playlist has been added to the queue with `:playlistSize` tracks!'
        nowPlaying: 'Now playing: [:title](:link)\n`:duration` at `:volume%` volume - Requested by :requester'
        queueHasEnded: 'Queue has ended, leaving voice.'
        endedDueToInactivity: "The music has ended due to inactivity."
        endedDueToWebSocketClose: "The audio web socket was forcefully closed, stopping the music."
        noMatchFound: 'I found nothing with the given query: `{0}`'
        trackLoadFailed: "I couldn't add that to the queue: `{0}`"
        musicChannel: "You can only use music commands in the :channel channel."
        resumeMusic: "Resuming music, please wait a few seconds while everything is loaded back for you."

    ClearQueueCommand:
        error: 'Nothing to clear, request music first with `{0}play`'
        emptyQueue: 'Nothing to clear, there are no songs pending in the queue right now.'
        success: 'I have removed **:queueSize** songs from the queue, the queue is now empty!'

    DJLevelCommand:
        title: "Current DJ Level: {0}"
        footer: "Use \"{0} types\" to see a full list of the available DJ level types."
        types:
            title: "DJ Level Types"
            footer: "Use \"{0} <type>\" to change the DJ Level to the given type for the server."
        invalidType: "`{0}` is not a valid `DJ Level` type, please use one of the following:\n`{1}`"
        changedTo: "The `DJ Level` status has changed to **:type**.\n:info"
        information:
            all: "Everybody can use all music commands, even without the `DJ` role."
            none: "Only people with the `DJ` role can use music commands."
            normal: "Preventing people without the `DJ` role from using commands such as playlists, volume control, and force skip, but still allowing the use of the play command."

    MoveHereCommand:
        error: 'Not connected to voice, request music first with `{0}play`'
        hasMusicChannel: "The server has a music voice channel setup, if you'd like me to move to a different voice channel, please get an admin on the server to drag 'n drop me into a different voice channel."
        nowPlayingIn: 'I am now playing music in **:channelName**'

    MusicChannelCommand:
        updated: "The **:type** music channel has successfully been :status"
        field:
            title: "Music Channels"
            message: "**Text Channel:** :text\n**Voice Channel:** :voice"
        status:
            disabled: "disabled"
            enabled: "set to **{0}**"
        errors:
            invalidType: "Invalid type of music channel given, the type must be either `text` or `voice`"
            notValidType: "`{0}` is not a not a valid {1} channel, you must include a valid voice channel that you want to use as the music channel."

    MusicMessagesCommand:
        message: "Music messages are currently **:status**.\n\n**Info**\n:info"
        updated: "The music messages have successfully been **:status**."
        error: "Invalid argument given, the status must be either `on` or `off` to change the music messages status."
        footer: "To change the music messages, use {0}"
        status:
            disabled: "disabled"
            enabled: "enabled"
        info:
            disabled: "When music messages are disabled, the `Now Playing` messages will no longer be sent, and other music related commands will automatically delete themselves after a while."
            enabled: "When music messages are enabled, the `Now Playing` messages will stay, even after the song being played changes, some related messages will also stay.\n**Note:** Most music commands will still be auto deleted after a while."

    PauseCommand:
        error: 'Nothing to pause, request music first with `{0}play`'
        alreadyPaused: 'The music is already paused, use `!resume` to resume the music.'
        paused: 'The music has been `paused`'

    PlayCommand:
        addedSong: ':user has added [:title](:url) to the queue. There are `:queueSize` song(s) ahead of it in the queue.'
        addedSongsFromPlaylist: ':user has added :songs songs from the [:title](:url) playlist to the queue. There are `:queueSize` song(s) ahead of it in the queue.'
        session:
            title: 'Results for {0}'
            footer: 'Choose a song with {0} <number>'

    PlaylistCommand:
        noPlaylists: 'This server does not have any music playlists yet, you can create one with\n`:command` to get started'
        noPlaylistWithName: 'There are no playlist called `:playlist`, you can create the playlist by using the\n`:command` command'
        invalidProperty: 'Invalid `property` given, there are no playlist properties called `{0}`.\nYou can learn more by running `{1}help {2}`'
        invalidFormat: 'Invalid format, missing the `:type` property!\n`:command`'
        invalidIdGiven: 'Invalid ID given, the number given is too :type\n`:command`'
        invalidIdNumberGiven: 'Invalid ID given, the ID must be a number\n`:command`'
        noMoreSongSlots: "The `:playlist` playlist doesn't have any more song slots."
        noMorePlaylistSlots: "The server doesn't have any more playlist slots, you can delete existing playlists to free up slots."
        sameIdsGiven: "The two IDs given are the same, the song won't be moved anywhere that way.\n`:command`"
        failedToLoad: 'Failed to load: {0}'
        failedToLoadPlaylist: 'Failed to load the :playlist, maybe try again later or report this to one of my developers.'
        failedToSavePlaylist: 'Something went wrong while trying to save the playlist: {0}'
        loadedPlaylist: 'The **:name** playlist has been loaded and added to the queue with **:amount** songs.'
        noMatches: 'No Matches'
        attemptingToAddLivestreamToPlaylist: "You can't add livestreams to a playlist!"
        userHasAddedSong: ':user has added [:name](:url) to the `:playlist` playlist.\nThe `:playlist` playlist has `:slots` more song slots available.'
        swapSongInPlaylist: '[:selectedTitle](:selectedLink) have swapped position with [:replacedTitle](:replacedLink) in the `:playlist` playlist.'
        alreadyExists: 'The `:playlist` playlist already exists!'
        onlyNumbersInName: "The playlist name can't only be numbers, you must include some letters!"
        renamingPlaylistAlreadyExists: "Can't rename the `:oldplaylist` to `:playlist`, there is already a playlist called `:playlist`"
        playlistCreated: 'The `:playlist` playlist has been been created successfully!\nYou can start adding songs to it with `:command :playlist add <song>`'
        playlistDeleted: 'The `:name` playlist has been deleted successfully!'
        playlistRenamed: 'The `:oldplaylist` playlist has been renamed to `:playlist`!'
        playlistIsEmpty: 'There are no songs in this playlist, you can add songs to it by using the\n`:command` command.'
        playlistIsAlreadyEmpty: 'The `:playlist` playlist is already empty, there is nothing to remove.'
        songHasBeenRemovedFromPlaylist: ':song has been successfully removed from the `:playlist` playlist'
        playlistTitle: ':musical_note: Music Playlist {0}'
        playlistSize: '[ {0} out of {1} ]'
        playlistLine: '{0}\n       Playlist has **{1}** song(s)'
        playlistSongLine: '`{0}` [{1}]({2}) [{3}]'

    RemoveSongFromQueueCommand:
        error: 'Missing argument `song id`, you must include the ID of the song that you want to remove from the queue.'
        failedToRemoveSong: 'Something went wrong, failed to remove song at index `:index`'
        tooHighNumberGiven: 'There are only `{0}` songs in the queue, try lowering your number a bit.'
        invalidRange: 'Invalid range given, give the range of IDs in a start to end format, like `3-6`.'
        mustBePositiveNumber: 'The `song id` must be a valid positive number.'
        nothingToRemove: 'Nothing to remove, request music first with `{0}play`'
        success: ':song has been successfully removed from the queue.'
        successMultiple: 'Songs from `:start` to `:end` were successfully removed from the queue.\n:tracks'
        successMultipleNote: "\nAnd **{0}** more songs were removed from the queue."

    RepeatMusicQueueCommand:
        error: 'There is nothing to repeat, request music first with `{0}play`'
        title: 'Current repeat mode: {0}'
        message: "The music player's repeat status has been successfully changed to **:state**, this means:\n\n:note"
        footer: 'Use "{0} <repeat-mode>" to set the repeat mode.'
        states:
            single: 'One'
            all: 'All'
            loopoff: 'Off'
        notes:
            single: 'The music player will repeat the song that is currently playing without going to the next song in the queue.\n**Note:** This also mutes "Now Playing" messages so the chat is not spammed with the same song over and over again.'
            all: 'The music player will repeat every song in the queue, after a song finishes playing it will be re-added to the end of the queue automatically.'
            loopoff: 'The music player will not loop, when a song finishes playing it will get removed from the queue and the next track will begin playing.'

    ResumeCommand:
        error: 'Nothing to resume, request music first with `{0}play`'
        alreadyPlaying: 'The music is already playing, use `:prefixpause` to pause the music first.'
        resume: 'The music has been `resumed`'

    SeekCommand:
        error: 'Nothing is playing right now, request something with `{0}play` first.'
        invalidTimeGiven: 'The `number` argument must be a valid time format that is at least 0 or more seconds long.'
        seekingLive: 'You cannot jump to a different time code for livestreams.'
        seekingTooFar: '`{0}` is more than the length of the current song playing, if you want to skip to the next song use `{1}skip` instead.'
        seekTo: 'Seeking **:title** to `:time`'

    SetDefaultVolumeCommand:
        currentVolume: 'The default volume for the server is currently set to `:volume%`'
        changedVolume: 'The default volume has been set to `:volume%`'
        failedToSave: 'Something went wrong while trying to save the default volume: {0}'
        mustBeNumber: 'The `volume` must be a number between 1 and 100'

    ShuffleCommand:
        error: 'The queue is already empty, you can request something with\n`{0}play <song title | url>`'
        success: '**:amount** songs have been shuffled in the queue.'

    SkipCommand:
        error: 'Nothing to skip, request music first with `{0}play`'

    SongCommand:
        error: 'Nothing to display, request music first with `{0}play`'
        paused: 'Currently Paused'
        playing: 'Currently Playing'
        songsInQueue: 'Songs in Queue'
        moreSongs: 'You can see more songs by using {0} <page>'
        noSongs: 'There are no other songs in the queue right now'
        andXMoreSongs: '_And **{0}** more song{1}!_'
        formats:
            line: '**{0}** [{1}]({2})'
            song: '[{0}]({1})\nPlaying at `{2}` volume with `{3}` left of the song - Requested by <@{4}>'
            stream: '[{0}]({1})\nPlaying at `{2}` volume, the stream is `{3}` - Requested by <@{4}>'

    StopCommand:
        error: "Nothing is playing right now, you can't stop the music when nothing is playing."
        success: 'The player has stopped, and **:number** songs have been removed from the queue.'

    VoiceFixCommand:
        message: "**Swapping to :swap region:** {0}\n**Swapping back to :original region:** {1}"
        starting: "Starting swapping process...\n\n"
        finished: "\n\nDone! Music should now work again!"
        error: "Failed to finish the swap process, error: {0}"

    VolumeCommand:
        error: 'Nothing is playing, request music first with `{0}play`'
        requireDJRole: 'The `DJ` role is required to change the volume!'
        invalidVolume: 'Invalid volume given, the volume must be a valid number between 1 and 100.'
        nowPlaying: ':musical_note: Music is playing at **:volume** volume'
        setTo: ':musical_note: Volume set to **:volume**'

    VoteSkipCommand:
        error: 'Nothing to skip, request music first with `{0}play`'
        registered: 'Your vote has been registered! `:votes` more votes needed to skip the song.'
        alreadyVoted: 'You can only vote skip once per song! `:votes` more votes needed to skip the song.'

search:
    DuckDuckGoCommand:
        nsfwDisabled: "The `Duck Duck GO` command can only be used in NSFW channels, as the search results may return NSFW content."
        searchResults: 'Search result for: {0}'
        noResults: 'I found nothing for `:query`'
        seeAlso: '**See also**'
        nsfwStatus:
            enabled: 'NSFW Search is enabled'
            disabled: 'NSFW Search is disabled'

    GfycatCommand:
        noResults: "I couldn't find any gifs matching your query: `:query`"

    UrbanDictionaryCommand:
        noResults: ':user I found nothing for `:query`'
        untitled: 'Untitled'
        example: 'Example'
        results: ':percentage percentage of people like this. :up👍 :down👎'
        nsfwDisabled: "The `Urban Dictionary` command can only be used in NSFW channels, as the content of the command may not be appropriate for all."

    XKCDCommand:
        invalidArgument: "Invalid argument given, the argument must be a valid number between `1` and `{0}`, or `random` to get a random comic."
        number: 'XKCD number #{0}'

utility:
    CalculateCommand:
        boolean:
            true: 'True'
            false: 'False'
        eastereggs:
            quickMaths: '	-	Quick maths!'
            binary: "There are only 10 types of people in the world, those who understand binary and those who don't."

    ChangelogCommand:
        invalidChangelogChannel: "Invalid changelog channel defined, the text channel could not be found!"
        cantReadChangelogChannel: "I don't have permission to read the message history for the defined changelog channel, this is required in oder to read, load, and display the changelog messages."
        invalidVersionGiven: "Invalid version given, `{0}` is not a valid version entry."
        noChangelogMessages: "There are no changelog messages to display yet, try check back again later."
        latestVersion: "Latest version: {0}"
        lastFewVersions: "Last 10 Versions"
        changelogVersions: "Changelog Versions ({0})"

    ChannelIdCommand:
        message: ':user :id: of the :channel channel is `:targetChannel`'

    ChannelInfoCommand:
        fields:
            id: 'ID'
            position: 'Position'
            users: 'Users'
            category: 'Category'
            bitRate: 'Bit Rate'
            nsfw: 'NSFW'
            createdAt: 'Created At'
        noTopic: '*No topic has been set for this channel*'
        timeFormat: 'EEE, dd MMM yyyy HH:mm'

    ExpandUrlCommand:
        noRedirect: ":url doesn't redirect anywhere."
        redirects: '{0} redirects to {1}'
        jumps: '**The link jumps through the following sites:**'

    FeedbackCommand:
        confirmation: "You're about to send the following feedback:```:feedback```The feedback will be sent to the feedback channel in the :server server, are you sure you want to send it?\nUse `:command` in the next 60 seconds with no arguments to send the feedback."
        success: 'Successfully sent feedback <:tickYes:319985232306765825>'
        failedToSend: 'Failed to send feedback message: :error'
        invalidFeedbackChannel: "Invalid feedback channel defined, the text channel could not be found!"
        mustBe32CharactersOrMore: "The feedback message must be at least 32 characters long."

    GlobalLeaderboardCommand:
        noData: 'There is no leaderboard data right now, try again later.'
        line: '`:num` **:username** is level **:level** with **:experience** xp.'
        title: 'Global Experience Leaderboard'
        yourRank: 'Your rank'
        loading:
            title: 'Loading global leaderboard'
            message: 'Please wait a second while the global leaderboard is being loaded.'

    InviteCommand:
        message: 'You can invite me to your server by [clicking here](:oauth) or using the link below:\n\n:oauth\n\n:note'
        note: 'If you would like try out newly developed features before everyone else, you could also try the *__Cutting Edge__* bot which gets new features added almost daily, you can invite that bot by [clicking here](:edgeInvite) or using the link below:\n\n:edgeInvite'

    IPInfoCommand:
        hostname: 'Hostname'
        organisation: 'Organisation'
        country: 'Country'

    LeaderboardCommand:
        noData: 'There are no leaderboard data right now, try again later.'
        line: '`:num` **:username** is level **:level** with **:experience** xp.'
        title: '{0} Leaderboard'
        yourRank: 'Your rank'

    PingCommand:
        message: 'Pong! Time taken :ping ms (:rating) Websocket heartbeat :heartbeat ms'
        rating:
            10: 'faster than Sonic! :smiley_cat:'
            100: 'great! :smiley:'
            200: 'nice! :slight_smile:'
            300: 'decent. :neutral_face:'
            400: 'average... :confused:'
            500: 'slightly slow. :slight_frown:'
            600: 'kinda slow.. :frowning2:'
            700: 'slow.. :worried:'
            800: 'too slow. :disappointed:'
            900: 'bad. :sob: (helpme)'
            1600: '#BlameDiscord. :angry:'
            10000: 'this makes no sense :thinking: #BlameAlexis'
            other: 'slow af. :dizzy_face:'

    RankBackgroundCommand:
        canBeUnlocked: "Rank backgrounds can be unlocked using **[Vote Points](https://discordbots.org/bot/avaire)**,\nyou'll get **1 point** each time you vote for the bot."
        listTitle: "Rank Backgrounds ({0})"
        youHaveVotePoints: "You have {0} vote points."
        exampleTitle: "{0} Example"
        exampleFooter: "{0} costs {1} vote points"
        alreadyOwnsBackground: "You already own the **:name** background!"
        doesntHaveEnoughPoints: "You don't have enough vote points to buy this background, the background costs `{0}`, and you have `{1}` vote points."
        boughtBackgroundSuccessfully: "Congratulations! You now own the **:name** background!\nYou can use the `:command` command to use the background."
        youDontOwnThisBackground: "You don't own the **:name** background, however you can buy it for **:cost** Vote Points!"
        successfullyChangedBackground: "You have successfully switched to use the **:name** background."
        disabledBackgrounds: "Rank backgrounds have successfully been disabled, you are now using embedded messages for rank commands again."
        buyNotes:
            alreadyOwns: "**{0}**\n- _You already own this background._"
            doesntOwns: "**{0}**\n - Costs {1} vote points."
        failedToSendExampleMessage: "Something went wrong while trying to send the example image for the {0} background, error: {1}."
        failedToBuyTheBackground: "Something went wrong while buying the background, error: {0}"
        failedToSetBackground: "Failed to set the background due to a database error, try again later. If this error continues to appear, please contact one of my developers."

    RankCommand:
        botsCannotReceiveXp: "Bots cannot receive xp and therefore can't be ranked, try and tag a user instead."
        unranked: 'Unranked'
        fields:
            rank: 'Rank'
            level: 'Level'
            total: '{0} (Total: {1})'
            experience: 'Experience'
            experienceToNext: 'Experience needed to next Level'
            youNeedMoreXpToLevelUp: '[{0}] {1}{2}\n\t\t\t\t\t\t\t\t\tYou need {3} more XP to level up.'

    RemindCommand:
        errors:
            invalidMeHere: 'Invalid type given, you must declare where you want to be reminded, by either using `here` to be reminded in the current channel, or `me` to be reminded in a direct message.'
            invalidTime: 'Invalid time given, the time must be greater than 60 seconds and less than 3 days.'

    ServerIdCommand:
        message: ':user :id: of this server is `:guildid`'

    ServerInfoCommand:
        fields:
            id: 'ID'
            owner: 'Owner'
            textChannels: 'Text Channels'
            voiceChannels: 'Voice Channels'
            members: 'Members'
            roles: 'Roles'
            region: 'Region'
            createdAt: 'Created At'
            emojis: 'Custom Emojis ({0})'
        timeFormat: 'EEE, dd MMM yyyy HH:mm'

    ShardCommand:
        allShards: 'All Shards'
        totalShards: 'Total Shards'

    SourceCommand:
        noArgs: 'AvaIre source code:'
        command: 'AvaIre source code for the **:command** command:'
        invalidCommand: 'Invalid command given, here is the full source code instead.'
        externalCommand: "The command is registered via an external plugin, the author of the plugin hasn't made the source of the command public, or they forgot to add a link to it, here is the full source code for the bot instead."

    StatsCommand:
        title: 'Official Bot Server Invite'
        footer: 'Currently playing in {0} servers with {1} songs in the queue.'
        formats:
            perMinute: '{0} ({1} per min)'
            perSecond: '{0} ({1} per sec)'
            memory: '{0}Mb / {1}Mb'
        fields:
            author: 'Author'
            website: 'Website'
            library: 'Library'
            database: 'DB Queries ran'
            messages: 'Messages Received'
            shard: 'Shard'
            commands: 'Commands Ran'
            memory: 'Memory Usage'
            uptime: 'Uptime'
            members: 'Members'
            channels: 'Channels'
            servers: 'Servers'

    UptimeCommand:
        message: 'I have been online for :time'
        footer: 'Started {0} at {1}'
        dateFormat: 'EEEEEEEE, dd MMM yyyy'
        timeFormat: 'HH:mm:ss z'

    UserAvatarCommand:
        noUserFound: "I found no users with the name or ID of `{0}`"
        title: "{0}#{1}'s Avatar"

    UserIdCommand:
        message: ':id: of the user **:target** is `:targetid`'

    UserInfoCommand:
        fields:
            username: 'Username'
            userId: 'User ID'
            joinedServer: 'Joined Server'
            joinedDiscord: 'Joined Discord'
            roles: 'Roles ({0})'
            servers: 'Servers'
        inServers: '{0} the bot knows about'
        noRoles: '*This user does not have any roles*'
        timeFormat: 'EEE, dd MMM yyyy HH:mm'

    VersionCommand:
        current: 'I am currently `:difference` :type versions behind!'
        getLatest: 'You can get the latest version of me on github at [avaire/avaire](https://github.com/avaire/avaire)'
        usingLatest: "You're using the latest version of AvaIre!"
        latestVersion: 'The latest version of AvaIre is v{0}'
        latestChanges: 'Latest changes:'
        versions:
            majorName: 'Major'
            major: 'Major version updates are total reworks of the bot and how it works or a large compilation of minor changes to the source code, it is highly recommended that you update on major version changes since older versions will not be supported for bug fixes or updates.'
            minorName: 'Minor'
            minor: 'Minor version updates are new additions, features and reworks of the existing codebase, it is recommended that you update on minor version changes to keep up with the new features.'
            patchName: 'Patch'
            patch: 'Patch version updates are bug fixes, refactoring of existing code and very minor changes that wont affect other things in the code base, it is recommended that you update on patch version changes to keep up with the bug fixes and patches.'

    WeatherCommand:
        noCityFound: "No city was found with the name of **:name**, are you sure you spelt it correctly?"
        fields:
            weatherFor: "Weather for {0}, {1}"
            country: "Country"
            temperature: "Temperature"
            windDirection: "Wind Direction"
            windSpeed: "Wind Speed"
