/*
 * Copyright (c) 2018.
 *
 * This file is part of AvaIre.
 *
 * AvaIre is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * AvaIre is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with AvaIre.  If not, see <https://www.gnu.org/licenses/>.
 *
 *
 */

package com.avairebot.contracts.database.grammar;

import com.avairebot.contracts.database.Database;
import com.avairebot.database.DatabaseManager;
import com.avairebot.database.query.QueryBuilder;
import com.avairebot.database.schema.Blueprint;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.Map;

public interface Grammarable {

    /**
     * Creates a {@link Database.QueryType#CREATE create} grammar instance with the provided settings.
     *
     * @param manager   The database manager instance.
     * @param blueprint The blueprint that should be used for generating the grammar query.
     * @param options   The options that should be parsed to the grammar generator.
     * @return The database query that was generated by the blueprint.
     */
    String create(DatabaseManager manager, Blueprint blueprint, @Nonnull Map<String, Boolean> options);

    /**
     * Creates a {@link Database.QueryType#DELETE create} grammar instance with the provided settings.
     *
     * @param manager The database manager instance.
     * @param query   The query builder that should be used for generating the delete query.
     * @param options The options that should be parsed to the grammar generator.
     * @return The database query that was generated by the blueprint.
     */
    String delete(DatabaseManager manager, QueryBuilder query, @Nullable Map<String, Boolean> options);

    /**
     * Creates a {@link Database.QueryType#INSERT create} grammar instance with the provided settings.
     *
     * @param manager The database manager instance.
     * @param query   The query builder that should be used for generating the insert query.
     * @param options The options that should be parsed to the grammar generator.
     * @return The database query that was generated by the blueprint.
     */
    String insert(DatabaseManager manager, QueryBuilder query, @Nullable Map<String, Boolean> options);

    /**
     * Creates a {@link Database.QueryType#SELECT create} grammar instance with the provided settings.
     *
     * @param manager The database manager instance.
     * @param query   The query builder that should be used for generating the select query.
     * @param options The options that should be parsed to the grammar generator.
     * @return The database query that was generated by the blueprint.
     */
    String select(DatabaseManager manager, QueryBuilder query, @Nullable Map<String, Boolean> options);

    /**
     * Creates a {@link Database.QueryType#UPDATE create} grammar instance with the provided settings.
     *
     * @param manager The database manager instance.
     * @param query   The query builder that should be used for generating the update query.
     * @param options The options that should be parsed to the grammar generator.
     * @return The database query that was generated by the blueprint.
     */
    String update(DatabaseManager manager, QueryBuilder query, @Nullable Map<String, Boolean> options);
}
